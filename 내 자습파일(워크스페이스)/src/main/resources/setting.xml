<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<!-- Exam exam = new NewlecExam(); -->
<!-- 	getter & setter 방식 -->
<!-- 	<bean id="exam" class="spring.di.entity.NewlecExam"> -->
<!-- 		<property name="kor" value="10"></property> -->
<!-- 		<property name="eng" value="10"></property> -->
<!-- 		<property name="math" value="10"></property> -->
<!-- 		<property name="com" value="10"></property> -->
<!-- 	</bean> -->

<!-- 	Overload 방식 -->
<!-- 	<bean id="exam" class="spring.di.entity.NewlecExam"> -->
<!-- 		<constructor-arg name="kor" value="10"></constructor-arg> -->
<!-- 		<constructor-arg name="eng" value="20"></constructor-arg> -->
<!-- 		<constructor-arg index="2" value="30"></constructor-arg> -->
<!-- 		<constructor-arg index="3" value="40"></constructor-arg> -->
<!-- 	</bean> -->

	
	<context:component-scan base-package="spring.di.ui, spring.di.entity"></context:component-scan>
	<bean id ="exam" class="spring.di.entity.NewlecExam"></bean>
<!-- 	<context:annotation-config /> -->
<!-- 	<bean id="exam1" class="spring.di.entity.NewlecExam" p:kor="10" p:eng="20" p:math="20" p:com="30"></bean> -->
<!-- 	<bean id="exam2" class="spring.di.entity.NewlecExam" p:kor="10" p:eng="20" p:math="30" p:com="40"></bean> -->
<!-- 	<bean id="console" class="spring.di.ui.InlineExamConsole"> -->
<!-- 	</bean> -->
	
	<!-- ExamConsole console = new GridExamConsole(); -->
<!-- 	<bean id="console" class="spring.di.ui.InlineExamConsole"> -->
		<!--  console.setExam(exam); -->
<!-- 		<property name="exam" ref="exam"></property> -->
<!-- 	</bean> -->
	
<!-- 	실제로 객체를 만들 수 있는 방법 -->
<!-- Spring이 제공하는 편의 기능으로, 내부적으로 ListFactoryBean을 사용  -->
<!-- 	<util:list id="exams" list-class="java.util.ArrayList"> -->
<!-- 		<bean class="spring.di.entity.NewlecExam" p:kor="1" p:eng="1" p:math="30" p:com="40"></bean> -->
<!-- 		<ref bean="exam"/> -->
<!-- 	</util:list> -->
			
<!--  직접 ArrayList의 생성자를 호출하여 객체를 생성 -->			
<!-- 	<bean id="exams" class="java.util.ArrayList"> -->
<!-- 		<constructor-arg> -->
<!-- 			<list> -->
<!-- 				<bean class="spring.di.entity.NewlecExam" p:kor="1" p:eng="1" p:math="30" p:com="40"></bean> -->
<!-- 				<ref bean="exam"/> -->
<!-- 			</list> -->
<!-- 		</constructor-arg> -->
<!-- 	</bean> -->
</beans>
