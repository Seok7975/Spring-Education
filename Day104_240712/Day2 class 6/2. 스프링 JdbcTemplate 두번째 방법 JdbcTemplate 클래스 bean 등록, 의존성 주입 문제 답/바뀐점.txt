applicationContext.xml 에 추가
	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>


BoardDAOSpring

// DAO(Data Access Object)
@Repository
public class BoardDAOSpring{
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	// CRUD 기능의 메소드 구현
	// 글 등록
	public void insertBoard(BoardVO vo) {
		System.out.println("===> Spring JDBC로 insertBoard() 기능 처리");
		final String SQL = "INSERT INTO BOARD(TITLE, WRITER, CONTENT) VALUES(?,?,?)";
		jdbcTemplate.update(SQL, vo.getTitle(), vo.getWriter(), vo.getContent());
	}
	
	// 글 수정
	public void updateBoard(BoardVO vo) {
		System.out.println("===> Spring JDBC로 updateBoard() 기능 처리");
		final String SQL = "UPDATE BOARD SET TITLE=?, CONTENT=? WHERE SEQ=?";
		jdbcTemplate.update(SQL, vo.getTitle(), vo.getContent(), vo.getSeq());
	}

	// 글 삭제
	public void deleteBoard(BoardVO vo) {
		System.out.println("===> Spring JDBC로 deleteBoard() 기능 처리");
		final String SQL = "DELETE BOARD WHERE SEQ=?";
		jdbcTemplate.update(SQL, vo.getSeq());
	}
	
	// 글 상세 조회
//	public BoardVO getBoard(BoardVO vo) {
//		System.out.println("===> Spring JDBC로 getBoard() 기능 처리");
//		final String SQL = "SELECT * FROM BOARD WHERE SEQ=?";
//		return getJdbcTemplate().queryForObject(SQL, new BoardRowMapper(), vo.getSeq());
//	}
	
	// 글 상세 조회
	public BoardVO getBoard(BoardVO vo) {
		System.out.println("===> Spring JDBC로 getBoard() 기능 처리");
		Object[] args = {vo.getSeq()};
		final String SQL = "SELECT * FROM BOARD WHERE SEQ=?";
		return jdbcTemplate.queryForObject(SQL, args, new BoardRowMapper());
	}
	
	// 글 목록 조회
	public List<BoardVO> getBoardList(BoardVO vo){
		System.out.println("===> Spring JDBC로 getBoardList() 기능 처리");
		final String SQL = "SELECT * FROM BOARD ORDER BY SEQ DESC";
		return jdbcTemplate.query(SQL, new BoardRowMapper());
	}
}

BoardServiceImpl 클래스에

@Service("boardService")
public class BoardServiceImpl implements BoardService{
	
	@Autowired
	private BoardDAOSpring boardDAO;

수정된 소스를 모두 저장하고 다시 한번 BoardServiceClient 프로그램을 실행해보자. 기존에 JDBC 기반으로 동작했던 BoardDAO가 아닌 스프링 JDBC 기반의 BoardDAOSpring으로 DB 연동이 처리된다는 점만 다르고 실행 결과는 같다.